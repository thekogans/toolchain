#!/bin/bash

# Copyright 2011 Boris Kogan (boris@thekogans.net)
#
# This file is part of thekogans_toolchain.
#
# thekogans_toolchain is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# thekogans_toolchain is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with thekogans_toolchain. If not, see <http://www.gnu.org/licenses/>.

# This script will setup the environment for building with
# thekogans.net development environment and toolchain.

TOOLCHAIN_COMMON_BIN="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
if [ ! -e "$TOOLCHAIN_COMMON_BIN"/version ]; then
    echo "Unable to find $TOOLCHAIN_COMMON_BIN/version."
    exit 1
fi
. "$TOOLCHAIN_COMMON_BIN"/version

# Pull in a bunch of useful utility functions.
. "$TOOLCHAIN_COMMON_BIN"/utils

# Fill in what's missing from the environmnet with defaults provided during bootstrap.
TOOLCHAIN_ROOT="$(dirname $(dirname $TOOLCHAIN_COMMON_BIN))"
if [ -e "$TOOLCHAIN_ROOT"/defaultenvironment ]; then
    . "$TOOLCHAIN_ROOT"/defaultenvironment
fi

show_help=no
show_version=no
show_build_system_version=no
show_toolchain_version=no

# Parse command line options.
for i in "$@"; do
    case $i in
        -h|--help)
            show_help=yes
            ;;
        -v|--version)
            show_version=yes
            ;;
        -bsv|--build-system-version)
            show_build_system_version=yes
            ;;
        -tv|--toolchain-version)
            show_toolchain_version=yes
            ;;
        -dr:*|--development-root:*)
            DEVELOPMENT_ROOT="${i#*:}"
            ;;
        -sr:*|--sources-root:*)
            SOURCES_ROOT="${i#*:}"
            ;;
        -os:*|--operating-system:*)
            TOOLCHAIN_OS="${i#*:}"
            ;;
        -arch:*|--architecture:*)
            TOOLCHAIN_ARCH="${i#*:}"
            ;;
        -comp:*|--compiler:*)
            TOOLCHAIN_COMPILER="${i#*:}"
            ;;
        -nc:*|--naming-convention:*)
            TOOLCHAIN_NAMING_CONVENTION="${i#*:}"
            ;;
        -do:*|--default-organization:*)
            TOOLCHAIN_DEFAULT_ORGANIZATION="${i#*:}"
            ;;
        -dp:*|--default-project:*)
            TOOLCHAIN_DEFAULT_PROJECT="${i#*:}"
            ;;
        -db:*|--default-branch:*)
            TOOLCHAIN_DEFAULT_BRANCH="${i#*:}"
            ;;
        -ds:*|--default-svc:*)
            TOOLCHAIN_DEFAULT_SVC="${i#*:}"
            ;;
    esac
done

# Default the naming convention to Hierarchical if none is given.
if [ "$TOOLCHAIN_NAMING_CONVENTION" == "" ]; then
    TOOLCHAIN_NAMING_CONVENTION=Hierarchical
fi

environment_options="\
[-h | --help] \
[-v | --version] \
[-bsv | --build-system-version] \
[-tv | --toolchain-version] \
[[-dr | --development-root]:development_root_path] \
[[-sr | --sources-root]:sources_root_path] \
[[-os | --operating-system]:[Windows | OSX | Linux | ...]] \
[[-arch | --architecture]:[i386 | x86_64 | ...]] \
[[-comp | --compiler]:compiler] \
[[-nc | --naming-convention]:[Flat | Hierarchical]] \
[[-do | --default-organization]:default_organization] \
[[-dp | --default-project]:default_project] \
[[-db | --default-branch]:[trunk | branches/branch | tags/tag]] \
[[-ds | --default-svc]:[svn | git]]"

# Check if the TOOLCHAIN_TRIPLET was specified.
if [ "$TOOLCHAIN_OS" == "" ] || [ "$TOOLCHAIN_ARCH" == "" ] || [ "$TOOLCHAIN_COMPILER" == "" ]; then
    echo "Must specify the toolchain triplet (TOOLCHAIN_OS, TOOLCHAIN_ARCH, TOOLCHAIN_COMPILER)."
    exit 1
fi

# Validate TOOLCHAIN_NAMING_CONVENTION.
if [ "$TOOLCHAIN_NAMING_CONVENTION" != "Flat" ] && [ "$TOOLCHAIN_NAMING_CONVENTION" != "Hierarchical" ]; then
    echo "Unknown naming convention [-nc | --naming-convention]: $TOOLCHAIN_NAMING_CONVENTION [Flat | Hierarchical]"
    exit 1
fi

# Discover the environment...
if [ "$DEVELOPMENT_ROOT" != "" ]; then
    DEVELOPMENT_ROOT="$(cd $DEVELOPMENT_ROOT && pwd)"
else
    DEVELOPMENT_ROOT="$(dirname $TOOLCHAIN_ROOT)"
fi
if [ "$SOURCES_ROOT" != "" ]; then
    SOURCES_ROOT="$(cd $SOURCES_ROOT && pwd)"
else
    SOURCES_ROOT="$DEVELOPMENT_ROOT"/sources
fi
TOOLCHAIN_NAME="$(basename $TOOLCHAIN_ROOT)"
if [ `echo -n I | od -to2 | awk '{print substr($2,6,1); exit}'` == 1 ]; then
    TOOLCHAIN_ENDIAN=Little
else
    TOOLCHAIN_ENDIAN=Big
fi
TOOLCHAIN_COMMON_RESOURCES="$TOOLCHAIN_ROOT"/common/resources
TOOLCHAIN_BRANCH="$TOOLCHAIN_OS"/"$TOOLCHAIN_ARCH"/"$TOOLCHAIN_COMPILER"
TOOLCHAIN_DIR="$TOOLCHAIN_ROOT"/"$TOOLCHAIN_BRANCH"
if [ ! -d "$TOOLCHAIN_DIR" ]; then
    echo "Toolchain $TOOLCHAIN_DIR does not exist."
    exit 1
fi
TOOLCHAIN_TRIPLET="$TOOLCHAIN_OS"-"$TOOLCHAIN_ARCH"-"$TOOLCHAIN_COMPILER"
TOOLCHAIN_SHELL=`which bash`
if [ ! -e "$TOOLCHAIN_SHELL" ]; then
    echo "System shell (bash) is missing."
    exit 1
fi

# ...and export it.
# NOTE: If you ever add new environment variables,
# don't forget to update showenvironment.
export DEVELOPMENT_ROOT \
    SOURCES_ROOT \
    TOOLCHAIN_OS \
    TOOLCHAIN_ARCH \
    TOOLCHAIN_COMPILER \
    TOOLCHAIN_NAMING_CONVENTION \
    TOOLCHAIN_DEFAULT_ORGANIZATION \
    TOOLCHAIN_DEFAULT_PROJECT \
    TOOLCHAIN_DEFAULT_BRANCH \
    TOOLCHAIN_DEFAULT_SVC \
    TOOLCHAIN_NAME \
    TOOLCHAIN_ROOT \
    TOOLCHAIN_COMMON_BIN \
    TOOLCHAIN_COMMON_RESOURCES \
    TOOLCHAIN_ENDIAN \
    TOOLCHAIN_BRANCH \
    TOOLCHAIN_DIR \
    TOOLCHAIN_TRIPLET \
    TOOLCHAIN_SHELL

# Pull in toolchain specific environment (if specified).
if [ -e "$TOOLCHAIN_ROOT"/common/setenvironment ]; then
    . "$TOOLCHAIN_ROOT"/common/setenvironment "$@"
fi
if [ -e "$TOOLCHAIN_ROOT"/"$TOOLCHAIN_OS"/setenvironment ]; then
    . "$TOOLCHAIN_ROOT"/"$TOOLCHAIN_OS"/setenvironment "$@"
fi
if [ -e "$TOOLCHAIN_ROOT"/"$TOOLCHAIN_OS"/"$TOOLCHAIN_ARCH"/setenvironment ]; then
    . "$TOOLCHAIN_ROOT"/"$TOOLCHAIN_OS"/"$TOOLCHAIN_ARCH"/setenvironment "$@"
fi
if [ -e "$TOOLCHAIN_DIR"/setenvironment ]; then
    . "$TOOLCHAIN_DIR"/setenvironment "$@"
fi

if [ -e "$TOOLCHAIN_DIR"/bin/version ]; then
    . "$TOOLCHAIN_DIR"/bin/version
fi

if [ "$show_help" == "yes" ]; then
    show_command_help
    exit 0
fi

if [ "$show_version" == "yes" ]; then
    echo "thekogans.net build system version: $(get_build_system_version)"
    echo "thekogans.net toolchain version: $(get_toolchain_version)"
    exit 0
fi

if [ "$show_build_system_version" == "yes" ]; then
    echo "thekogans.net build system version: $(get_build_system_version)"
    exit 0
fi

if [ "$show_toolchain_version" == "yes" ]; then
    echo "thekogans.net toolchain version: $(get_toolchain_version)"
    exit 0
fi
