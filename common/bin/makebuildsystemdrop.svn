#!/bin/bash

# Copyright 2011 Boris Kogan (boris@thekogans.net)
#
# This file is part of thekogans_toolchain.
#
# thekogans_toolchain is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# thekogans_toolchain is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with thekogans_toolchain. If not, see <http://www.gnu.org/licenses/>.

# This script will create a thekogans.net toolchain and build system tarball.

function show_command_help () {
    echo "usage: $0 \
$environment_options \
[-su | --svn-url]:url"
}

# Create the environment.
if [ "$TOOLCHAIN_ROOT" == "" ]; then
    TOOLCHAIN_COMMON_BIN="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
    if [ ! -e "$TOOLCHAIN_COMMON_BIN/setenvironment" ]; then
        echo "$TOOLCHAIN_COMMON_BIN/setenvironment not found."
        exit 1
    fi
    . "$TOOLCHAIN_COMMON_BIN/setenvironment" "$@"
fi

svn_url="$TOOLCHAIN_SVN_URL"

# Parse command line options.
for i in "$@"; do
    case $i in
        -su:*|--svn-url:*)
            svn_url="${i#*:}"
            ;;
    esac
done

if [ "$svn_url" == "" ]; then
    echo "Must specify svn url."
    exit 1
fi

toolchain_drops="$TOOLCHAIN_ROOT"/drops
if [ ! -d "$toolchain_drops" ]; then
    mkdir -p "$toolchain_drops"
    check_errors $?
fi
cd "$toolchain_drops"
check_errors $?

if [ -d temp ]; then
    rm -rf temp
    check_errors $?
fi
mkdir -p temp
check_errors $?
cd temp
check_errors $?

# Check out the toolchain tree.
svn co "$svn_url/$TOOLCHAIN_NAME" "$TOOLCHAIN_NAME"
check_errors $?

# Clean up the toolchain tree.
rm -rf "$TOOLCHAIN_NAME"/.svn
check_errors $?

# Collect dependencies for thekogans_build_system.
thekogans_build_system="$TOOLCHAIN_NAME"/thekogans_build_system
mkdir -p "$thekogans_build_system"
check_errors $?
svn co "$svn_url/build_system" "$thekogans_build_system"
check_errors $?
rm -rf "$thekogans_build_system"/.svn
check_errors $?
. "$thekogans_build_system"/version
check_errors $?
BUILD_SYSTEM_VERSION="$BUILD_SYSTEM_MAJOR_VERSION.$BUILD_SYSTEM_MINOR_VERSION.$BUILD_SYSTEM_PATCH_VERSION"

# Add install script.
cat > "$TOOLCHAIN_NAME"/install << EOF
#!/bin/bash

# Copyright 2011 Boris Kogan (boris@thekogans.net)
#
# This file is part of thekogans_toolchain.
#
# thekogans_toolchain is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# thekogans_toolchain is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with thekogans_toolchain. If not, see <http://www.gnu.org/licenses/>.

TOOLCHAIN_ROOT="\$(cd \$(dirname \${BASH_SOURCE[0]}) && pwd)"
. "\$TOOLCHAIN_ROOT"/common/bin/setenvironment "\$@"

# thekogans_build_system
"\$TOOLCHAIN_ROOT"/thekogans_build_system/bootstrap
check_errors \$?

# Copy the new build system to the real toolchain.
REAL_TOOLCHAIN_ROOT="\$(cd \$(dirname \$(dirname \$TOOLCHAIN_ROOT)) && pwd)"
for file in "\$TOOLCHAIN_ROOT"/*; do
    if [ "\$file" != "\$TOOLCHAIN_ROOT"/install ] && \\
            [ "\$file" != "\$TOOLCHAIN_ROOT"/thekogans_build_system ]; then
        cp -v -r "\$file" "\$REAL_TOOLCHAIN_ROOT"
        check_errors \$?
    fi
done

# Create a code signing key if it doesn't exist.
#if [ ! -e "\$TOOLCHAIN_COMMON_RESOURCES"/signature.xml ];
#    "\$TOOLCHAIN_COMMON_BIN"/createcodesigningkey
#    check_errors \$?
#fi

exit 0
EOF
check_errors $?
chmod +x "$TOOLCHAIN_NAME"/install
check_errors $?

# Write defaultenvironment.
TOOLCHAIN_ROOT="$TOOLCHAIN_NAME"
DEVELOPMENT_ROOT=
SOURCES_ROOT=
"$TOOLCHAIN_NAME"/common/bin/setdefaultenvironment

# Package the toolchain tree.
. "$TOOLCHAIN_NAME"/common/bin/version
tar zcvf ../thekogans_"$TOOLCHAIN_NAME"-"$TOOLCHAIN_TRIPLET"-"$(get_toolchain_version)"-"$BUILD_SYSTEM_VERSION".tar.gz "$TOOLCHAIN_NAME"
check_errors $?

# Clean up.
cd ..
check_errors $?
rm -rf temp
check_errors $?

exit 0
