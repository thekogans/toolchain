#!/bin/bash

# Copyright 2011 Boris Kogan (boris@thekogans.net)
#
# This file is part of thekogans_toolchain.
#
# thekogans_toolchain is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# thekogans_toolchain is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with thekogans_toolchain. If not, see <http://www.gnu.org/licenses/>.

# This script will configure a directory tree and some
# helpful starter files for a new organization library.

function show_command_help () {
    echo "usage: $0 \
$environment_options \
[-o | --organization]:organization \
[-p | --project]:project \
[-pt | --project-type]:[library | program | plugin]"
}

# Create the environment.
if [ "$TOOLCHAIN_ROOT" == "" ]; then
    TOOLCHAIN_COMMON_BIN="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
    if [ ! -e "$TOOLCHAIN_COMMON_BIN"/setenvironment ]; then
        echo "$TOOLCHAIN_COMMON_BIN/setenvironment not found."
        exit 1
    fi
    . "$TOOLCHAIN_COMMON_BIN"/setenvironment "$@"
fi

organization="$TOOLCHAIN_DEFAULT_ORGANIZATION"
project=
projet_type=

# Parse command line options.
for i in "$@"; do
    case $i in
        -o:*|--organization:*)
            organization="${i#*:}"
            ;;
        -p:*|--project:*)
            project="${i#*:}"
            ;;
        -pt:*|--project-type:*)
            project_type="${i#*:}"
            ;;
    esac
done

# Validate input.
if [ "$organization" == "" ] || [ "$project" == "" ]; then
    echo "Must specify organization and project."
    exit 1
fi

if [ "$project_type" != "library" ] && [ "$project_type" != "program" ] && [ "$project_type" != "plugin" ]; then
    echo "Unsupported project_type [-pt | --project-type]: $project_type [library | program | plugin]."
    exit 1
fi

cat > thekogans_make.xml << EOF
<thekogans_make organization = "${organization}"
                project = "${project}"
                project_type = "${project_type}"
                major_version = "0"
                minor_version = "1"
                patch_version = "0"
                guid = "`$(get_toolchain_program -o:thekogans -p:genguid)`"
                schema_version = "`$(get_toolchain_program -o:thekogans -p:make) -a:get_schema_version`">
</thekogans_make>
EOF
check_errors $?

exit 0
